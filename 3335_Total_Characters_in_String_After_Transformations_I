class Solution {
    public int lengthAfterTransformations(String s, int t) {
        int MOD = 1_000_000_007;
        long[] count = new long[26];

        for (char c : s.toCharArray()) {
            count[c - 'a']++;
        }

        for (int j = 0; j < t; j++) {
            long[] next = new long[26];
            for (int i = 0; i < 26; i++) {
                if (count[i] == 0) continue;

                if (i == 25) { 
                    next[0] = (next[0] + count[i]) % MOD;
                    next[1] = (next[1] + count[i]) % MOD;
                } else { 
                    next[i + 1] = (next[i + 1] + count[i]) % MOD;
                }
            }
            count = next;
        }

        long total = 0;
        for (long val : count) {
            total = (total + val) % MOD;
        }

        return (int) total;
    }
}
